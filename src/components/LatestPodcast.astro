---
import { parse } from 'rss-to-json';

import MediaCard from './MediaCard.astro';
import { dasherize } from '../utils/dasherize';
import { truncate } from '../utils/truncate';

import wwwImage from '../images/hero-images/www.png';

let apiCallTries = 5;

async function getLatestPodcast() {
  try {
    // TODO: this breaks local development
    let feed = await parse('https://anchor.fm/s/e329dea0/podcast/rss');
    let [latestPodcastEpisode] = feed.items.map(
      ({
        title,
        description,
        published,
        itunes_episode
      }) => {
        return {
          date: published,
          description: truncate(description, 260),
          content: description,
          episodeNumber: itunes_episode,
          title: `${title}`,
          slug: dasherize(title)
        };
      }
    );

    return latestPodcastEpisode;
  } catch (error) {
    if (apiCallTries <= 0) {
      throw error;
    }

    apiCallTries--;

    setTimeout(function () {
      return getLatestPodcast();
    }, 5000);
  }
}

const latestPodcastEpisode = await getLatestPodcast();
---

<MediaCard
  mediaType="podcast"
  imgSrc={wwwImage}
  details={latestPodcastEpisode}
  data-aos="fade-up"
/>
